import os, getpass,hashlib,time
from decouple import config
from .colors import *
from .progress import *
from .yara_rule import *

# Declaring Variables
api = config('vtkey')
path = os.path.dirname(__file__)
            
## querying the virus total using virustotal-search.py and api
def query_virusTotal(target_file):
    ## getting the hash code of the file of choice        
    if(check_file_yara(target_file)):
        print("[-] This file might contain malware")
        return
    hashcode = get_hashCode(target_file)
    username = getpass.getuser()
    ## calling the query
    query = f"python {path}/virustotal-search.py -k " + api + " -m " + hashcode
    os.system(query)

## Iterating through out the the hard drive
def query_virusTotal_Folder():
    username = getpass.getuser()
    for root, dirs, files in os.walk("C:/"):
        for file in files:
            try:
                if(check_file_yara(file)):
                    print("This file might contain malware")
                    return
                full_path= os.path.join(root, file)
                hashcode = get_hashCode(full_path)
                query = f"python {path}/virustotal-search.py -k " + api + " -m " + hashcode
                output = os.system(query)
                time.sleep(2)
            except Exception as msg:
                print(colors.fg.orange, f"Skipped, unable to get a hash code", colors.reset)
                time.sleep(1)
                pass

## getting the hashcode using the previous challenge
def get_hashCode(targets):
    if "C:" in targets:
        target_file = targets
    else:
        target_file = os.path.abspath(targets)
    print(f"[+] scanning: {target_file}")
    animated_marker()
    return hash_co(target_file) 

## Getting the hash code.
def hash_co(fn):
    md_hash = hashlib.md5()
    with open(fn, "rb") as f:
        for byte_block in iter(lambda: f.read(4896),b""):
            md_hash.update(byte_block)
    f.close()
    return md_hash.hexdigest()